<?php
/**
 * StudyViewFilter
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * cBioPortal web Public API [Beta]
 *
 * A web service for supplying JSON formatted data to cBioPortal clients. Please note that this API is currently in beta and subject to change.
 *
 * OpenAPI spec version: 1.0
 * Contact: cbioportal@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.25
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * StudyViewFilter Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StudyViewFilter implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StudyViewFilter';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'alteration_filter' => '\Swagger\Client\Model\AlterationFilter',
        'case_lists' => 'string[][]',
        'clinical_data_filters' => '\Swagger\Client\Model\ClinicalDataFilter[]',
        'custom_data_filters' => '\Swagger\Client\Model\ClinicalDataFilter[]',
        'gene_filters' => '\Swagger\Client\Model\GeneFilter[]',
        'generic_assay_data_filters' => '\Swagger\Client\Model\GenericAssayDataFilter[]',
        'genomic_data_filters' => '\Swagger\Client\Model\GenomicDataFilter[]',
        'genomic_profiles' => 'string[][]',
        'patient_treatment_filters' => '\Swagger\Client\Model\AndedPatientTreatmentFilters',
        'patient_treatment_group_filters' => '\Swagger\Client\Model\AndedPatientTreatmentFilters',
        'sample_identifiers' => '\Swagger\Client\Model\SampleIdentifier[]',
        'sample_treatment_filters' => '\Swagger\Client\Model\AndedSampleTreatmentFilters',
        'sample_treatment_group_filters' => '\Swagger\Client\Model\AndedSampleTreatmentFilters',
        'study_ids' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'alteration_filter' => null,
        'case_lists' => null,
        'clinical_data_filters' => null,
        'custom_data_filters' => null,
        'gene_filters' => null,
        'generic_assay_data_filters' => null,
        'genomic_data_filters' => null,
        'genomic_profiles' => null,
        'patient_treatment_filters' => null,
        'patient_treatment_group_filters' => null,
        'sample_identifiers' => null,
        'sample_treatment_filters' => null,
        'sample_treatment_group_filters' => null,
        'study_ids' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'alteration_filter' => 'alterationFilter',
        'case_lists' => 'caseLists',
        'clinical_data_filters' => 'clinicalDataFilters',
        'custom_data_filters' => 'customDataFilters',
        'gene_filters' => 'geneFilters',
        'generic_assay_data_filters' => 'genericAssayDataFilters',
        'genomic_data_filters' => 'genomicDataFilters',
        'genomic_profiles' => 'genomicProfiles',
        'patient_treatment_filters' => 'patientTreatmentFilters',
        'patient_treatment_group_filters' => 'patientTreatmentGroupFilters',
        'sample_identifiers' => 'sampleIdentifiers',
        'sample_treatment_filters' => 'sampleTreatmentFilters',
        'sample_treatment_group_filters' => 'sampleTreatmentGroupFilters',
        'study_ids' => 'studyIds'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'alteration_filter' => 'setAlterationFilter',
        'case_lists' => 'setCaseLists',
        'clinical_data_filters' => 'setClinicalDataFilters',
        'custom_data_filters' => 'setCustomDataFilters',
        'gene_filters' => 'setGeneFilters',
        'generic_assay_data_filters' => 'setGenericAssayDataFilters',
        'genomic_data_filters' => 'setGenomicDataFilters',
        'genomic_profiles' => 'setGenomicProfiles',
        'patient_treatment_filters' => 'setPatientTreatmentFilters',
        'patient_treatment_group_filters' => 'setPatientTreatmentGroupFilters',
        'sample_identifiers' => 'setSampleIdentifiers',
        'sample_treatment_filters' => 'setSampleTreatmentFilters',
        'sample_treatment_group_filters' => 'setSampleTreatmentGroupFilters',
        'study_ids' => 'setStudyIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'alteration_filter' => 'getAlterationFilter',
        'case_lists' => 'getCaseLists',
        'clinical_data_filters' => 'getClinicalDataFilters',
        'custom_data_filters' => 'getCustomDataFilters',
        'gene_filters' => 'getGeneFilters',
        'generic_assay_data_filters' => 'getGenericAssayDataFilters',
        'genomic_data_filters' => 'getGenomicDataFilters',
        'genomic_profiles' => 'getGenomicProfiles',
        'patient_treatment_filters' => 'getPatientTreatmentFilters',
        'patient_treatment_group_filters' => 'getPatientTreatmentGroupFilters',
        'sample_identifiers' => 'getSampleIdentifiers',
        'sample_treatment_filters' => 'getSampleTreatmentFilters',
        'sample_treatment_group_filters' => 'getSampleTreatmentGroupFilters',
        'study_ids' => 'getStudyIds'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['alteration_filter'] = isset($data['alteration_filter']) ? $data['alteration_filter'] : null;
        $this->container['case_lists'] = isset($data['case_lists']) ? $data['case_lists'] : null;
        $this->container['clinical_data_filters'] = isset($data['clinical_data_filters']) ? $data['clinical_data_filters'] : null;
        $this->container['custom_data_filters'] = isset($data['custom_data_filters']) ? $data['custom_data_filters'] : null;
        $this->container['gene_filters'] = isset($data['gene_filters']) ? $data['gene_filters'] : null;
        $this->container['generic_assay_data_filters'] = isset($data['generic_assay_data_filters']) ? $data['generic_assay_data_filters'] : null;
        $this->container['genomic_data_filters'] = isset($data['genomic_data_filters']) ? $data['genomic_data_filters'] : null;
        $this->container['genomic_profiles'] = isset($data['genomic_profiles']) ? $data['genomic_profiles'] : null;
        $this->container['patient_treatment_filters'] = isset($data['patient_treatment_filters']) ? $data['patient_treatment_filters'] : null;
        $this->container['patient_treatment_group_filters'] = isset($data['patient_treatment_group_filters']) ? $data['patient_treatment_group_filters'] : null;
        $this->container['sample_identifiers'] = isset($data['sample_identifiers']) ? $data['sample_identifiers'] : null;
        $this->container['sample_treatment_filters'] = isset($data['sample_treatment_filters']) ? $data['sample_treatment_filters'] : null;
        $this->container['sample_treatment_group_filters'] = isset($data['sample_treatment_group_filters']) ? $data['sample_treatment_group_filters'] : null;
        $this->container['study_ids'] = isset($data['study_ids']) ? $data['study_ids'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets alteration_filter
     *
     * @return \Swagger\Client\Model\AlterationFilter
     */
    public function getAlterationFilter()
    {
        return $this->container['alteration_filter'];
    }

    /**
     * Sets alteration_filter
     *
     * @param \Swagger\Client\Model\AlterationFilter $alteration_filter alteration_filter
     *
     * @return $this
     */
    public function setAlterationFilter($alteration_filter)
    {
        $this->container['alteration_filter'] = $alteration_filter;

        return $this;
    }

    /**
     * Gets case_lists
     *
     * @return string[][]
     */
    public function getCaseLists()
    {
        return $this->container['case_lists'];
    }

    /**
     * Sets case_lists
     *
     * @param string[][] $case_lists case_lists
     *
     * @return $this
     */
    public function setCaseLists($case_lists)
    {
        $this->container['case_lists'] = $case_lists;

        return $this;
    }

    /**
     * Gets clinical_data_filters
     *
     * @return \Swagger\Client\Model\ClinicalDataFilter[]
     */
    public function getClinicalDataFilters()
    {
        return $this->container['clinical_data_filters'];
    }

    /**
     * Sets clinical_data_filters
     *
     * @param \Swagger\Client\Model\ClinicalDataFilter[] $clinical_data_filters clinical_data_filters
     *
     * @return $this
     */
    public function setClinicalDataFilters($clinical_data_filters)
    {
        $this->container['clinical_data_filters'] = $clinical_data_filters;

        return $this;
    }

    /**
     * Gets custom_data_filters
     *
     * @return \Swagger\Client\Model\ClinicalDataFilter[]
     */
    public function getCustomDataFilters()
    {
        return $this->container['custom_data_filters'];
    }

    /**
     * Sets custom_data_filters
     *
     * @param \Swagger\Client\Model\ClinicalDataFilter[] $custom_data_filters custom_data_filters
     *
     * @return $this
     */
    public function setCustomDataFilters($custom_data_filters)
    {
        $this->container['custom_data_filters'] = $custom_data_filters;

        return $this;
    }

    /**
     * Gets gene_filters
     *
     * @return \Swagger\Client\Model\GeneFilter[]
     */
    public function getGeneFilters()
    {
        return $this->container['gene_filters'];
    }

    /**
     * Sets gene_filters
     *
     * @param \Swagger\Client\Model\GeneFilter[] $gene_filters gene_filters
     *
     * @return $this
     */
    public function setGeneFilters($gene_filters)
    {
        $this->container['gene_filters'] = $gene_filters;

        return $this;
    }

    /**
     * Gets generic_assay_data_filters
     *
     * @return \Swagger\Client\Model\GenericAssayDataFilter[]
     */
    public function getGenericAssayDataFilters()
    {
        return $this->container['generic_assay_data_filters'];
    }

    /**
     * Sets generic_assay_data_filters
     *
     * @param \Swagger\Client\Model\GenericAssayDataFilter[] $generic_assay_data_filters generic_assay_data_filters
     *
     * @return $this
     */
    public function setGenericAssayDataFilters($generic_assay_data_filters)
    {
        $this->container['generic_assay_data_filters'] = $generic_assay_data_filters;

        return $this;
    }

    /**
     * Gets genomic_data_filters
     *
     * @return \Swagger\Client\Model\GenomicDataFilter[]
     */
    public function getGenomicDataFilters()
    {
        return $this->container['genomic_data_filters'];
    }

    /**
     * Sets genomic_data_filters
     *
     * @param \Swagger\Client\Model\GenomicDataFilter[] $genomic_data_filters genomic_data_filters
     *
     * @return $this
     */
    public function setGenomicDataFilters($genomic_data_filters)
    {
        $this->container['genomic_data_filters'] = $genomic_data_filters;

        return $this;
    }

    /**
     * Gets genomic_profiles
     *
     * @return string[][]
     */
    public function getGenomicProfiles()
    {
        return $this->container['genomic_profiles'];
    }

    /**
     * Sets genomic_profiles
     *
     * @param string[][] $genomic_profiles genomic_profiles
     *
     * @return $this
     */
    public function setGenomicProfiles($genomic_profiles)
    {
        $this->container['genomic_profiles'] = $genomic_profiles;

        return $this;
    }

    /**
     * Gets patient_treatment_filters
     *
     * @return \Swagger\Client\Model\AndedPatientTreatmentFilters
     */
    public function getPatientTreatmentFilters()
    {
        return $this->container['patient_treatment_filters'];
    }

    /**
     * Sets patient_treatment_filters
     *
     * @param \Swagger\Client\Model\AndedPatientTreatmentFilters $patient_treatment_filters patient_treatment_filters
     *
     * @return $this
     */
    public function setPatientTreatmentFilters($patient_treatment_filters)
    {
        $this->container['patient_treatment_filters'] = $patient_treatment_filters;

        return $this;
    }

    /**
     * Gets patient_treatment_group_filters
     *
     * @return \Swagger\Client\Model\AndedPatientTreatmentFilters
     */
    public function getPatientTreatmentGroupFilters()
    {
        return $this->container['patient_treatment_group_filters'];
    }

    /**
     * Sets patient_treatment_group_filters
     *
     * @param \Swagger\Client\Model\AndedPatientTreatmentFilters $patient_treatment_group_filters patient_treatment_group_filters
     *
     * @return $this
     */
    public function setPatientTreatmentGroupFilters($patient_treatment_group_filters)
    {
        $this->container['patient_treatment_group_filters'] = $patient_treatment_group_filters;

        return $this;
    }

    /**
     * Gets sample_identifiers
     *
     * @return \Swagger\Client\Model\SampleIdentifier[]
     */
    public function getSampleIdentifiers()
    {
        return $this->container['sample_identifiers'];
    }

    /**
     * Sets sample_identifiers
     *
     * @param \Swagger\Client\Model\SampleIdentifier[] $sample_identifiers sample_identifiers
     *
     * @return $this
     */
    public function setSampleIdentifiers($sample_identifiers)
    {
        $this->container['sample_identifiers'] = $sample_identifiers;

        return $this;
    }

    /**
     * Gets sample_treatment_filters
     *
     * @return \Swagger\Client\Model\AndedSampleTreatmentFilters
     */
    public function getSampleTreatmentFilters()
    {
        return $this->container['sample_treatment_filters'];
    }

    /**
     * Sets sample_treatment_filters
     *
     * @param \Swagger\Client\Model\AndedSampleTreatmentFilters $sample_treatment_filters sample_treatment_filters
     *
     * @return $this
     */
    public function setSampleTreatmentFilters($sample_treatment_filters)
    {
        $this->container['sample_treatment_filters'] = $sample_treatment_filters;

        return $this;
    }

    /**
     * Gets sample_treatment_group_filters
     *
     * @return \Swagger\Client\Model\AndedSampleTreatmentFilters
     */
    public function getSampleTreatmentGroupFilters()
    {
        return $this->container['sample_treatment_group_filters'];
    }

    /**
     * Sets sample_treatment_group_filters
     *
     * @param \Swagger\Client\Model\AndedSampleTreatmentFilters $sample_treatment_group_filters sample_treatment_group_filters
     *
     * @return $this
     */
    public function setSampleTreatmentGroupFilters($sample_treatment_group_filters)
    {
        $this->container['sample_treatment_group_filters'] = $sample_treatment_group_filters;

        return $this;
    }

    /**
     * Gets study_ids
     *
     * @return string[]
     */
    public function getStudyIds()
    {
        return $this->container['study_ids'];
    }

    /**
     * Sets study_ids
     *
     * @param string[] $study_ids study_ids
     *
     * @return $this
     */
    public function setStudyIds($study_ids)
    {
        $this->container['study_ids'] = $study_ids;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


